/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as authenticatedAppImport } from './routes/(authenticated)/_app'
import { Route as authenticatedAppMonthsIndexImport } from './routes/(authenticated)/_app/months/index'
import { Route as authenticatedAppFixedentriesIndexImport } from './routes/(authenticated)/_app/fixed_entries/index'
import { Route as authenticatedAppDashboardIndexImport } from './routes/(authenticated)/_app/dashboard/index'

// Create Virtual Routes

const authenticatedImport = createFileRoute('/(authenticated)')()

// Create/Update Routes

const authenticatedRoute = authenticatedImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedAppRoute = authenticatedAppImport.update({
  id: '/_app',
  getParentRoute: () => authenticatedRoute,
} as any)

const authenticatedAppMonthsIndexRoute =
  authenticatedAppMonthsIndexImport.update({
    path: '/months/',
    getParentRoute: () => authenticatedAppRoute,
  } as any)

const authenticatedAppFixedentriesIndexRoute =
  authenticatedAppFixedentriesIndexImport.update({
    path: '/fixed_entries/',
    getParentRoute: () => authenticatedAppRoute,
  } as any)

const authenticatedAppDashboardIndexRoute =
  authenticatedAppDashboardIndexImport.update({
    path: '/dashboard/',
    getParentRoute: () => authenticatedAppRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/_app': {
      id: '/_app'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedAppImport
      parentRoute: typeof authenticatedRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/_app/dashboard/': {
      id: '/_app/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedAppDashboardIndexImport
      parentRoute: typeof authenticatedAppImport
    }
    '/(authenticated)/_app/fixed_entries/': {
      id: '/_app/fixed_entries/'
      path: '/fixed_entries'
      fullPath: '/fixed_entries'
      preLoaderRoute: typeof authenticatedAppFixedentriesIndexImport
      parentRoute: typeof authenticatedAppImport
    }
    '/(authenticated)/_app/months/': {
      id: '/_app/months/'
      path: '/months'
      fullPath: '/months'
      preLoaderRoute: typeof authenticatedAppMonthsIndexImport
      parentRoute: typeof authenticatedAppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  authenticatedRoute: authenticatedRoute.addChildren({
    authenticatedAppRoute: authenticatedAppRoute.addChildren({
      authenticatedAppDashboardIndexRoute,
      authenticatedAppFixedentriesIndexRoute,
      authenticatedAppMonthsIndexRoute,
    }),
  }),
  LoginIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/login/"
      ]
    },
    "/": {
      "filePath": "(authenticated)",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "(authenticated)/_app.tsx",
      "parent": "/",
      "children": [
        "/_app/dashboard/",
        "/_app/fixed_entries/",
        "/_app/months/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_app/dashboard/": {
      "filePath": "(authenticated)/_app/dashboard/index.tsx",
      "parent": "/_app"
    },
    "/_app/fixed_entries/": {
      "filePath": "(authenticated)/_app/fixed_entries/index.tsx",
      "parent": "/_app"
    },
    "/_app/months/": {
      "filePath": "(authenticated)/_app/months/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
